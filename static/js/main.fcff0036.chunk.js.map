{"version":3,"sources":["personal-info/resume.pdf","components/Navbar.jsx","starfield/particle.js","starfield/index.js","personal-info/config.js","components/MainBody.jsx","images/profile.jpeg","components/AboutMe.jsx","components/ProjectCard.jsx","components/Project.jsx","components/Skills.jsx","components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navigation","React","forwardRef","useState","navbar","setNavbar","navbarMenuRef","useRef","window","addEventListener","pageYOffset","Navbar","ref","className","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","Pdf","target","rel","Particle","bounds","this","_bounds","reset","init","z","random","max","depth","x","min","y","ox","oy","oz","vx","vy","vz","ax","ay","az","s","sx","sy","os","osx","osy","hue","lightness","alpha","sr","Math","StarfieldAnimation","_canvasRef","_canvas","_tick","_draw","_tickRaf","raf","_reset","props","cancel","size","numParticles","lineWidth","alphaFactor","style","rest","width","height","overflow","i","_particles","length","update","ctx","getContext","save","translate","_vp","clearRect","p","beginPath","moveTo","lineTo","strokeStyle","stroke","restore","vp","push","PureComponent","defaultProps","sizeMe","monitorWidth","monitorHeight","mainBody","gradientColors","firstName","lastName","firstMessage","secondMessage","about","heading","message","repos","gitHubUsername","reposLength","specificRepos","skills","getInTouch","MainBody","Ref","Jumbotron","fluid","background","backgroundSize","position","Container","cursor","show","strings","typeSpeed","backSpeed","startDelay","backDelay","loop","showCursor","aria-label","aria-hidden","role","AboutMe","src","ProfilePicture","alt","CardButtons","svn_url","Language","languages_url","repo_url","data","setData","handleRequest","useCallback","a","axios","get","response","console","error","useEffect","array","total_count","index","Object","prototype","hasOwnProperty","call","map","language","trunc","CardFooter","star_count","pushed_at","updated_at","setUpdated_at","handleUpdatetime","date","Date","diff","getTime","hours","measurement","toString","time","Intl","DateTimeFormat","day","month","year","format","ProjectCard","value","name","description","stargazers_count","Col","md","Card","Body","Title","as","Text","count","dummyProject","API","Project","allReposAPI","specficReposAPI","dummyProjectsArr","Array","fill","projectsArray","setProjectsArray","fetchRepos","repoList","slice","Row","project","Skills","skillsTabRef","Footer","backgroundColor","App","basename","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fcff0036.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/resume.fd221113.pdf\";","import React, { useState } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Pdf from '../personal-info/resume.pdf';\n\nconst Navigation = React.forwardRef(() => {\n  const [navbar, setNavbar] = useState(false);\n  const navbarMenuRef = React.useRef();\n\n  const changeBackground = () => {\n    if (window.pageYOffset >= 80) {\n      setNavbar(true);\n    } else {\n      setNavbar(false);\n    }\n  };\n\n  window.addEventListener('scroll', changeBackground);\n\n  return (\n    <Navbar\n      ref={navbarMenuRef}\n      className={` fixed-top  ${\n        navbar ? 'navbar-white' : 'navbar-transparent'\n      }`}\n      expand=\"lg\"\n    >\n      <Navbar.Brand className=\"brand\" href=\"/#home\">\n        {`< Portfolio />`}\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"toggler\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link\n            className=\"nav-link lead\"\n            href={Pdf}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            Resume\n          </Nav.Link>\n          <Nav.Link className=\"nav-link lead\" href=\"/#aboutme\">\n            About\n          </Nav.Link>\n          <Nav.Link className=\"nav-link lead\" href=\"/#skills\">\n            Skills\n          </Nav.Link>\n          <Nav.Link className=\"nav-link lead\" href=\"/#projects\">\n            Projects\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n});\n\nexport default Navigation;\n","/* eslint-disable no-use-before-define */\n/* eslint-disable prettier/prettier */\n/* eslint-disable no-underscore-dangle */\n/**\n * @class Particle\n */\n\nexport default class Particle {\n  constructor(bounds) {\n    this._bounds = bounds\n    this.reset(true)\n  }\n\n  reset(init = false) {\n    this.z = init ? random(0, this._bounds.z.max) : this._bounds.z.max\n    const depth = (this._bounds.depth / (this._bounds.depth + this.z))\n\n    this.x = random(this._bounds.x.min, this._bounds.x.max) / depth\n    this.y = random(this._bounds.y.min, this._bounds.y.max) / depth\n    this.ox = this.x\n    this.oy = this.y\n    this.oz = this.z\n    this.vx = 0\n    this.vy = 0\n    this.vz = random(-1, -10)\n    this.ax = 0\n    this.ay = 0\n    this.az = 0\n    this.s = 0\n    this.sx = 0\n    this.sy = 0\n    this.os = this.s\n    this.osx = this.sx\n    this.osy = this.sy\n    this.hue = random(120, 200)\n    this.lightness = random(70, 100)\n    this.alpha = 0\n  }\n\n  update() {\n    this.vx += this.ax\n    this.vy += this.ay\n    this.vz += this.az\n\n    this.x += this.vx\n    this.y += this.vy\n    this.z += this.vz\n\n    if (this.sx - this.sr > this._bounds.x.max ||\n      this.sy - this.sr > this._bounds.y.max ||\n      this.z > this._bounds.z.max ||\n      this.sx + this.sr < this._bounds.x.min ||\n      this.sy + this.sr < this._bounds.y.min ||\n      this.z < this._bounds.z.min\n    ) {\n      this.reset()\n    }\n\n    this.ox = this.x\n    this.oy = this.y\n    this.oz = this.z\n    this.os = this.s\n    this.osx = this.sx\n    this.osy = this.sy\n  }\n}\n\nfunction random (min, max) {\n  return Math.random() * (max - min) + min\n}\n","/**\n * @class StarfieldAnimation\n */\n\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport sizeMe from 'react-sizeme'\nimport raf from 'raf'\n\nimport Particle from './particle'\n\nclass StarfieldAnimation extends PureComponent {\n  static propTypes = {\n    numParticles: PropTypes.number,\n    lineWidth: PropTypes.number,\n    alphaFactor: PropTypes.number,\n    depth: PropTypes.number,\n    size: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number\n    }).isRequired,\n    style: PropTypes.object\n  }\n\n  static defaultProps = {\n    numParticles: 300,\n    alphaFactor: 1,\n    lineWidth: 2,\n    depth: 300,\n    style: { }\n  }\n\n  componentWillMount() {\n    this._reset(this.props)\n  }\n\n  componentDidMount() {\n    this._tick()\n  }\n\n  componentWillUnmount() {\n    raf.cancel(this._tickRaf)\n  }\n\n  componentWillReceiveProps(props) {\n    this._reset(props)\n  }\n\n  render() {\n    const {\n      numParticles,\n      lineWidth,\n      alphaFactor,\n      depth,\n      size,\n      style,\n      ...rest\n    } = this.props\n\n    return (\n        <canvas\n          ref={this._canvasRef}\n          width={size.width}\n          height={size.height}\n          style={{\n            overflow: 'hidden',\n            ...style\n          }}\n          {...rest}\n        />\n    )\n  }\n\n  _canvasRef = (ref) => {\n    this._canvas = ref\n  }\n\n  _tick = () => {\n    // this._draw()\n    // this._update()\n    this._draw()\n\n    this._tickRaf = raf(this._tick)\n  }\n\n  _update() {\n    for (let i = 0; i < this._particles.length; ++i) {\n      this._particles[i].update()\n    }\n  }\n\n  _draw() {\n    if (!this._canvas) return\n    const ctx = this._canvas.getContext('2d')\n    const {\n      alphaFactor,\n      lineWidth\n    } = this.props\n    \n    ctx.lineWidth = lineWidth\n    \n    ctx.save()\n    ctx.translate(this._vp.x, this._vp.y)\n    ctx.clearRect(-this._vp.x, -this._vp.y, this._bounds.width, this._bounds.height)\n    \n\n    for (let i = 0; i < this._particles.length; ++i) {\n      const p = this._particles[i]\n\n      p.s = this._bounds.depth / (this._bounds.depth + p.z)\n      p.sx = p.x * p.s\n      p.sy = p.y * p.s\n      p.alpha = alphaFactor * (this._bounds.z.max - p.z) / (this._bounds.z.max / 2)\n\n      ctx.beginPath()\n      ctx.moveTo(p.sx, p.sy)\n      ctx.lineTo(p.osx, p.osy)\n      ctx.strokeStyle = 'hsla(' + p.hue + ', 100%, ' + p.lightness + '%, ' + p.alpha + ')'\n      ctx.stroke()\n      p.update()\n    }\n\n    ctx.restore()\n  }\n\n  _reset(props) {\n    const {\n      numParticles,\n      depth,\n      size\n    } = props\n\n    this._particles = []\n\n    const vp = {\n      x: size.width / 2,\n      y: size.height / 2\n    }\n\n    this._vp = vp\n    this._bounds = {\n      depth,\n      width: size.width,\n      height: size.height,\n      x: { min: -vp.x, max: size.width - vp.x },\n      y: { min: -vp.y, max: size.height - vp.y },\n      z: { min: -depth, max: 1000 }\n    }\n\n    for (let i = 0; i < numParticles; ++i) {\n      this._particles.push(new Particle(this._bounds))\n    }\n  }\n}\n\nexport default sizeMe({ monitorWidth: true, monitorHeight: true })(StarfieldAnimation)\n","// NAVIGATION BAR SECTION\n\nconst navBar = {};\n\n// MAIN BODY SECTION\n\nconst mainBody = {\n  gradientColors: '#FFFFFF, #3D3D3D, #000000',\n  firstName: 'Nikita',\n  lastName: 'Stetskiy',\n  firstMessage: ' The secret of getting ahead is getting started. ',\n  secondMessage: [\n    'Computer Science Student',\n    'IT Engineer',\n    'Full Stack Developer',\n  ],\n};\n\n// ABOUT SECTION\n\nconst about = {\n  heading: 'About Me',\n  message:\n    'My name is Nikita Stetskiy. I’m an IT engineer student from the University of Granada. In my spare time I enjoy improving my editing skills ' +\n    'and being engaging with projects that require me to work out of my comfort set, thus I am continually learning new languages and development ' +\n    \"techniques. I'm improving myself to become a dedicated and efficient full stack developer. Establishing my strengths in application layers, \" +\n    'presentation layers, databases and data structures.',\n};\n\n// PROJECTS SECTION\n// Setting up project lenght will automatically fetch your that number of recently updated projects, or you can set this field 0 to show none.\n//      i.e: reposLength: 0,\n// If you want to display specfic projects, add the repository names,\n//      i.e [\"repository-1\", \"repo-2\"]\n\nconst repos = {\n  heading: 'Recent Projects',\n  gitHubUsername: 'nikitastetskiy',\n  reposLength: 4,\n  specificRepos: [],\n};\n\n// SKILLS SECTION\n\nconst skills = {\n  heading: 'Skills',\n};\n\n// GET IN TOUCH SECTION\n\nconst getInTouch = {\n  heading: 'Get In Touch',\n  message:\n    'Thank you for your time and consideration. Feel free to email me at',\n  email: 'nikitastetskiy@gmail.com',\n};\n\nexport { navBar, mainBody, about, repos, skills, getInTouch };\n","import React from 'react';\nimport Typist from 'react-typist';\nimport Typed from 'react-typed';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport StarfieldAnimation from '../starfield/index';\nimport { mainBody, getInTouch } from '../personal-info/config';\n\nconst MainBody = React.forwardRef(() => {\n  const Ref = React.useRef();\n\n  return (\n    <Jumbotron\n      fluid\n      id=\"home\"\n      style={{\n        background: `linear-gradient(136deg,${mainBody.gradientColors})`,\n        backgroundSize: '1200% 1200%',\n      }}\n      className=\"title bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\n    >\n      <StarfieldAnimation\n        className=\"text-mix\"\n        lineWidth={0.0}\n        depth={1000}\n        numParticles={350}\n        style={{\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n        }}\n      />\n      <Container className=\"text-center text-mix\">\n        <h1 ref={Ref} className=\"display-1\">\n          {`${mainBody.firstName} ${mainBody.lastName}`}\n        </h1>\n        <div>\n          {/* \n          \n          Using componentWillReceiveProps (deprecated)\n          \n          */}\n          <div className=\"p-3\">\n            <Typist className=\"lead typist\" cursor={{ show: false }}>\n              {mainBody.firstMessage}\n            </Typist>\n          </div>\n          <div className=\"p-1\">\n            &lt;\n            <Typed\n              strings={mainBody.secondMessage}\n              typeSpeed={40}\n              backSpeed={60}\n              startDelay={4000}\n              backDelay={1000}\n              loop\n              showCursor={false}\n            />\n            /&gt;\n          </div>\n        </div>\n        <div className=\"header-icons\">\n          <a\n            aria-label=\"Send email\"\n            href={`mailto:${getInTouch.email}`}\n            rel=\"noreferrer noopener\"\n          >\n            <i className=\"icon fa fa-envelope\" />\n          </a>\n          <a\n            aria-label=\"My Linkedin\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n            href=\"https://www.linkedin.com/in/nikita-stetskiy-743572150/\"\n          >\n            <i className=\"icon fab fa-linkedin\" aria-hidden=\"true\" />\n          </a>\n          <a\n            aria-label=\"My Github\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n            href=\"https://github.com/nikitastetskiy\"\n          >\n            <i className=\"icon fab fa-github-alt\" aria-hidden=\"true\" />\n          </a>\n        </div>\n        <a\n          className=\"btn btn-outline-light btn-lg\"\n          href=\"#aboutme\"\n          role=\"button\"\n          aria-label=\"Learn more about me\"\n        >\n          More about me\n        </a>\n      </Container>\n    </Jumbotron>\n  );\n});\n\nexport default MainBody;\n","export default __webpack_public_path__ + \"static/media/profile.6f771833.jpeg\";","import React from 'react';\nimport { about } from '../personal-info/config';\nimport ProfilePicture from '../images/profile.jpeg';\nimport Pdf from '../personal-info/resume.pdf';\n\nconst AboutMe = () => (\n  <div id=\"aboutme\" className=\"jumbotron jumbotron-fluid m-0 bg-light\">\n    <div className=\"container container-fluid display-4 pb-5 text-center\">\n      <div className=\"row aboutme-text\">\n        <div>\n          <img\n            className=\"border-secondary rounded-circle center pic\"\n            src={ProfilePicture}\n            alt=\"profilePicture\"\n          />\n        </div>\n\n        <div className=\"container container-fluid\">\n          <h2 className=\"display-4 mb-5 text-center\">{about.heading}</h2>\n          <p className=\"lead text-center\">{about.message}</p>\n          <p className=\"lead text-center\">\n            <a\n              className=\"btn btn-outline-dark btn-lg\"\n              href={Pdf}\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n              role=\"button\"\n              aria-label=\"Resume/CV\"\n            >\n              Resume\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n);\nexport default AboutMe;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Skeleton from 'react-loading-skeleton';\nimport axios from 'axios';\n\n// Missing in props validation\n\nconst ProjectCard = ({ value }) => {\n  const {\n    name,\n    description,\n    svn_url,\n    stargazers_count,\n    languages_url,\n    pushed_at,\n  } = value;\n  return (\n    <Col md={6}>\n      <Card className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\n        <Card.Body>\n          <Card.Title as=\"h5\">{name || <Skeleton />}</Card.Title>\n          <Card.Text>\n            {!description ? '' : description || <Skeleton count={3} />}\n          </Card.Text>\n          {svn_url ? <CardButtons svn_url={svn_url} /> : <Skeleton count={2} />}\n          <hr />\n          {languages_url ? (\n            <Language languages_url={languages_url} repo_url={svn_url} />\n          ) : (\n            <Skeleton count={3} />\n          )}\n          {value ? (\n            <CardFooter\n              star_count={stargazers_count}\n              repo_url={svn_url}\n              pushed_at={pushed_at}\n            />\n          ) : (\n            <Skeleton />\n          )}\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nconst CardButtons = ({ svn_url }) => (\n  <>\n    <a href={svn_url} target=\" _blank\" className=\"btn btn-outline-secondary\">\n      <i className=\"fab fa-github\" />\n      &nbsp;See on Github\n    </a>\n  </>\n);\n\nconst Language = ({ languages_url, repo_url }) => {\n  const [data, setData] = useState([]);\n\n  const handleRequest = useCallback(\n    async function () {\n      try {\n        const response = await axios.get(languages_url);\n        return setData(response.data);\n      } catch (error) {\n        return console.error(error.message);\n      }\n    },\n    [languages_url]\n  );\n\n  useEffect(() => {\n    handleRequest();\n  }, [handleRequest]);\n\n  const array = [];\n  let total_count = 0;\n  for (const index in data) {\n    if (Object.prototype.hasOwnProperty.call(data, index)) {\n      array.push(index);\n      total_count += data[index];\n    }\n  }\n\n  return (\n    <div className=\"pb-3\">\n      Languages:&nbsp;\n      {array.length\n        ? array.map((language) => (\n            <a\n              key={language}\n              className=\"badge badge-light card-link\"\n              href={`${repo_url}/search?l=${language}`}\n              target=\" _blank\"\n            >\n              {language}\n              :&nbsp;\n              {Math.trunc((data[language] / total_count) * 1000) / 10}\n              &nbsp; %\n            </a>\n          ))\n        : 'code yet to be deployed.'}\n    </div>\n  );\n};\n\nconst CardFooter = ({ star_count, repo_url, pushed_at }) => {\n  const [updated_at, setUpdated_at] = useState('0 mints');\n\n  const handleUpdatetime = useCallback(() => {\n    const date = new Date(pushed_at);\n    const nowdate = new Date();\n    const diff = nowdate.getTime() - date.getTime();\n    const hours = Math.trunc(diff / 1000 / 60 / 60);\n\n    if (hours < 24) {\n      if (hours < 1) return setUpdated_at('just now');\n      const measurement = hours === 1 ? 'hour' : 'hours';\n      return setUpdated_at(`${hours.toString()} ${measurement} ago`);\n    }\n    const options = { day: 'numeric', month: 'long', year: 'numeric' };\n    const time = new Intl.DateTimeFormat('en-US', options).format(date);\n    return setUpdated_at(`on ${time}`);\n  }, [pushed_at]);\n\n  useEffect(() => {\n    handleUpdatetime();\n  }, [handleUpdatetime]);\n\n  return (\n    <p className=\"card-text\">\n      <a\n        href={`${repo_url}/stargazers`}\n        target=\" _blank\"\n        className=\"text-dark text-decoration-none\"\n      >\n        <span className=\"text-dark card-link mr-4\">\n          <i className=\"fab fa-github\" />\n          &nbsp;Stars&nbsp;\n          <span className=\"badge badge-dark\">{star_count}</span>\n        </span>\n      </a>\n      <small className=\"text-muted\">\n        Updated&nbsp;\n        {updated_at}\n      </small>\n    </p>\n  );\n};\n\nexport default ProjectCard;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Row from 'react-bootstrap/Row';\nimport axios from 'axios';\nimport ProjectCard from './ProjectCard';\nimport { repos } from '../personal-info/config';\n\nconst dummyProject = {\n  name: null,\n  description: null,\n  svn_url: null,\n  stargazers_count: null,\n  languages_url: null,\n  pushed_at: null,\n};\nconst API = 'https://api.github.com';\n\nconst Project = () => {\n  const allReposAPI = `${API}/users/${repos.gitHubUsername}/repos?sort=updated&direction=desc`;\n  const specficReposAPI = `${API}/repos/${repos.gitHubUsername}`;\n  const dummyProjectsArr = new Array(\n    repos.reposLength + repos.specificRepos.length\n  ).fill(dummyProject);\n\n  const [projectsArray, setProjectsArray] = useState([]);\n\n  const fetchRepos = useCallback(async () => {\n    let repoList = [];\n    try {\n      // getting all repos\n      let response = await axios.get(allReposAPI);\n      // slicing to the length\n      repoList = [...response.data.slice(0, repos.reposLength)];\n      // adding specified repos\n      try {\n        for (let i = 0; i < repos.specificRepos.length; i += 1) {\n          response = await axios.get(\n            `${specficReposAPI}/${repos.specificRepos[i]}`\n          );\n          repoList.push(response.data);\n        }\n      } catch (error) {\n        console.error(error.message);\n      }\n      // setting projectArray\n      // TODO: remove the duplication.\n      setProjectsArray(repoList);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }, [allReposAPI, repos.reposLength, repos.specificRepos, specficReposAPI]);\n\n  useEffect(() => {\n    fetchRepos();\n  }, [fetchRepos]);\n\n  return (\n    <Jumbotron fluid id=\"projects\" className=\"bg-light m-0 align-items-center\">\n      <Container className=\"\">\n        <h2 className=\"display-4 pb-5 text-center\">{repos.heading}</h2>\n        <Row>\n          {projectsArray.length\n            ? projectsArray.map((project, index) => (\n                <ProjectCard\n                  key={`project-card-${repos.reposLength - index}`}\n                  id={`project-card-${index}`}\n                  value={project}\n                />\n              ))\n            : dummyProjectsArr.map((project, index) => (\n                <ProjectCard\n                  key={`dummy-${repos.reposLength - index}`}\n                  id={`dummy-${index}`}\n                  value={project}\n                />\n              ))}\n        </Row>\n      </Container>\n    </Jumbotron>\n  );\n};\n\nexport default Project;\n","import React from 'react';\nimport { Jumbotron, Container } from 'react-bootstrap';\nimport { skills } from '../personal-info/config';\n\nfunction Skills() {\n  return (\n    <Jumbotron ref={skills.skillsTabRef} fluid className=\"m-0\" id=\"skills\">\n      <Container className=\"p-2\">\n        <h2 ref={skills.skillsTabRef} className=\"display-4 pb-5 text-center\">\n          {skills.heading}\n        </h2>\n        <div className=\"user\">\n          <div>\n            <div className=\"tech\">\n              <h2 className=\"pb-3\">Code</h2>\n              <i className=\"icons fab fa-python\" />\n              <i className=\"icons fab fa-js-square\" />\n              <i className=\"icons devicon-cplusplus-line-wordmark\" />\n            </div>\n            <div className=\"tech\">\n              <i className=\"icons devicon-java-plain\" />\n              <i className=\"icons devicon-ruby-plain\" />\n              <i className=\"icons devicon-html5-plain-wordmark\" />\n            </div>\n          </div>\n\n          <div>\n            <div className=\"tech\">\n              <h2 className=\"pb-3\">Web</h2>\n              <i className=\"icons devicon-apache-line-wordmark\" />\n              <i className=\"icons devicon-django-line-wordmark\" />\n              <i className=\"icons fab devicon-nginx-original-wordmark\" />\n            </div>\n            <div className=\"tech\">\n              <i className=\"icons devicon-bootstrap-plain-wordmark\" />\n              <i className=\"icons devicon-flask-original\" />\n              <i className=\"icons devicon-heroku-original\" />\n            </div>\n          </div>\n          <div>\n            <div className=\"tech\">\n              <h2 className=\"pb-3\">Tools</h2>\n              <i className=\"icons devicon-docker-plain\" />\n              <i className=\"icons fab fa-git\" />\n              <i className=\"icons fab devicon-mongodb-plain-wordmark\" />\n            </div>\n            <div className=\"tech\">\n              <i className=\"icons devicon-postgresql-plain\" />\n              <i className=\"icons devicon-npm-original-wordmark\" />\n              <i className=\"icons devicon-express-original-wordmark\" />\n            </div>\n          </div>\n        </div>\n      </Container>\n    </Jumbotron>\n  );\n}\n\nexport default Skills;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { getInTouch } from '../personal-info/config';\n\nconst Footer = () => {\n  const bgStyle = { backgroundColor: '#EEEEEE' };\n\n  return (\n    <footer style={bgStyle} className=\"mt-auto py-5 text-center\">\n      <Container>\n        <h2 className=\"display-5 pb-3 text-center\">{getInTouch.heading}</h2>\n        <p className=\"lead text-center pb-3\">\n          {getInTouch.message}\n          &nbsp;\n          <a href={`mailto:${getInTouch.email}`}>{getInTouch.email}</a>\n          .&nbsp;\n        </p>\n        <p>\n          <small className=\"text-muted\">\n            Project code is open source. Feel free to fork it on&nbsp;\n            <a\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n              href=\"https://github.com/nikitastetskiy/portfolio\"\n              aria-label=\"My GitHub\"\n            >\n              Github\n            </a>\n            .\n          </small>\n        </p>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport MainBody from './components/MainBody';\nimport AboutMe from './components/AboutMe';\nimport Project from './components/Project';\nimport Skills from './components/Skills';\nimport Footer from './components/Footer';\nimport './scss/custom.scss';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\n      <Navbar />\n      <MainBody />\n      <AboutMe />\n      <Skills />\n      <Project />\n      <Footer />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}